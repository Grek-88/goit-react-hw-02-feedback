{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css"],"names":["FeedbackOptions","this","props","onLeaveFeedback","className","s","btn","type","onClick","Component","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","HandlerClick","e","target","textContent","setState","prevState","countTotalFeedback","console","log","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wRAkCeA,E,4JA7BX,WAA0C,IAAD,yDAAZC,KAAKC,MAAzBC,EAAgC,EAAhCA,gBACL,OACI,qCACI,wBACIC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAASL,EAHb,kBAOA,wBACIC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAASL,EAHb,qBAOA,wBACIC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAASL,EAHb,wB,GAlBcM,aCmBfC,E,4JApBX,WACI,MAMIT,KAAKC,MALLS,EADJ,EACIA,KACAC,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,IAHJ,IAIIC,aAJJ,MAIY,EAJZ,MAKIC,0BALJ,MAKyB,EALzB,EAOA,OACI,qCACI,uCAAUJ,KACV,0CAAaC,EAAb,OACA,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,c,GAfSN,aCOVO,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MCFMC,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC2E3BC,E,4MAnEbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,aAAe,SAACC,GACe,SAAzBA,EAAEC,OAAOC,aACX,EAAKC,UAAS,SAACC,GACb,MAAO,CACLjB,KAAMiB,EAAUjB,KAAO,MAIA,YAAzBa,EAAEC,OAAOC,aACX,EAAKC,UAAS,SAACC,GACb,MAAO,CACLhB,QAASgB,EAAUhB,QAAU,MAIN,QAAzBY,EAAEC,OAAOC,aACX,EAAKC,UAAS,SAACC,GACb,MAAO,CACLf,IAAKe,EAAUf,IAAM,O,wDAM7B,WAEE,OADcZ,KAAKqB,MAAMX,KAAOV,KAAKqB,MAAMV,QAAUX,KAAKqB,MAAMT,M,6CAIlE,WACE,IAAMC,EAAQb,KAAK4B,qBAGnB,OAFAC,QAAQC,IAAIjB,IACKA,EAASb,KAAKqB,MAAMX,KAAOG,EAAS,IAAM,GAAGkB,QAAQ,K,oBAIxE,WACE,MAA+B/B,KAAKqB,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKT,UAAWC,IAAEgB,IAAlB,UACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBd,gBAAiBF,KAAKsB,iBAEzC,cAAC,EAAD,CAASN,MAAM,aAAf,SACGhB,KAAK4B,qBACJ,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOb,KAAK4B,qBACZd,mBAAoBd,KAAKgC,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,+B,GA5DhBX,a,MCFlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BC,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,IAAM,oB","file":"static/js/main.da10b694.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nclass FeedbackOptions extends Component {\r\n    render({ onLeaveFeedback } = this.props) {\r\n        return (\r\n            <>\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"button\"\r\n                    onClick={onLeaveFeedback}\r\n                >\r\n                    Good\r\n                </button>\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"button\"\r\n                    onClick={onLeaveFeedback}\r\n                >\r\n                    Neutral\r\n                </button>\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"button\"\r\n                    onClick={onLeaveFeedback}\r\n                >\r\n                    Bad\r\n                </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n    render() {\r\n        const {\r\n            good,\r\n            neutral,\r\n            bad,\r\n            total = 0,\r\n            positivePercentage = 0,\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral} </p>\r\n                <p>Bad: {bad}</p>\r\n                <p>Total: {total}</p>\r\n                <p>Positive feedback: {positivePercentage}%</p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\n\nimport s from \"./App.module.css\";\n\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Section from \"../Section/Section\";\nimport Notification from \"../Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  HandlerClick = (e) => {\n    if (e.target.textContent === \"Good\") {\n      this.setState((prevState) => {\n        return {\n          good: prevState.good + 1,\n        };\n      });\n    }\n    if (e.target.textContent === \"Neutral\") {\n      this.setState((prevState) => {\n        return {\n          neutral: prevState.neutral + 1,\n        };\n      });\n    }\n    if (e.target.textContent === \"Bad\") {\n      this.setState((prevState) => {\n        return {\n          bad: prevState.bad + 1,\n        };\n      });\n    }\n  };\n\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    console.log(total);\n    const positiv = (total ? (this.state.good / total) * 100 : 0).toFixed(2);\n    return positiv;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className={s.App}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.HandlerClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1b7Ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Q1dD\"};"],"sourceRoot":""}